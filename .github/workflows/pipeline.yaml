name: Pipeline

on: [push]

permissions:
  contents: 'read'
  id-token: 'write'

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    steps:
      # Install gcloud, do not specify authentication.
      - uses: 'google-github-actions/setup-gcloud@master'
        with:
          project_id: 'pagespeed-insights-logger'

      - id: auth
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          #token_format: 'access_token'
          workload_identity_provider: 'projects/498248676648/locations/global/workloadIdentityPools/github-pool/providers/github-action-provider'
          service_account: 'terraform@pagespeed-insights-logger.iam.gserviceaccount.com'

      - id: 'gcloud'
        name: 'gcloud'
        run: |-
          gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"

          # Now you can run gcloud commands authenticated as the impersonated service account.
          gcloud secrets versions access "latest" --secret "my-secret"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          github-token: ${{ steps.auth.outputs.access_token }}
      
      - name: Terraform Init
        working-directory: ./infrastructure
        run: terraform init

      - name: Terraform Validate
        working-directory: ./infrastructure
        run: terraform validate -no-color

      - name: Terraform Plan
        working-directory: ./infrastructure
        run: terraform plan -no-color

      - name: Terraform Apply
        working-directory: ./infrastructure
        run: terraform apply -auto-approve

  
  Log:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
